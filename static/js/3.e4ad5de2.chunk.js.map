{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/Message.js","components/Dialogs/DialogItem.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Message","props","style","border","message","likesCount","DialogItem","className","s","dialog","active","to","id","name","maxLength160","maxLengthCreator","AddMesageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","mapStateToPropsRedirect","state","isAuth","auth","isAuthenticated","compose","connect","dialogsData","dialogsPage","messagesData","newMessageBody","dispatch","sendMessage","sendMessageCreator","Component","RedirectComponent","this","React","dialogs","dialogsItems","map","key","messages","formData"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,0B,uFCC9FC,EAAU,SAACC,GACtB,OACE,yBAAKC,MAAO,CAAEC,OAAQ,kBACpB,2BAAIF,EAAMG,SACV,uCAAaH,EAAMI,c,QCMVC,EARI,SAACL,GAClB,OACE,yBAAKM,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QACjC,kBAAC,IAAD,CAAMC,GAAE,mBAAcV,EAAMW,KAAOX,EAAMY,Q,kCCCzCC,EAAeC,YAAiB,KA8ChCC,EAAqBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAAChB,GACrB,OACE,0BAAMkB,SAAUlB,EAAMmB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUT,GACrBU,UAAWC,IACXC,YAAY,qBACZb,KAAK,oBAGT,6BACE,6C,gDC5CFc,EAA0B,SAACC,GAAD,MAAY,CAC1CC,OAAQD,EAAME,KAAKC,kB,OCgBNC,sBACbC,aAhBoB,SAACL,GACrB,MAAO,CACLM,YAAaN,EAAMO,YAAYD,YAC/BE,aAAcR,EAAMO,YAAYC,aAChCC,eAAgBT,EAAMO,YAAYE,mBAIb,SAACC,GACxB,MAAO,CACLC,YAAa,SAACF,GAAD,OACXC,EAASE,YAAmBH,UDTF,SAACI,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAK1C,MAAM4B,OACT,kBAACY,EAAcE,KAAK1C,OADI,kBAAC,IAAD,CAAUU,GAAG,eAHH,GACbiC,IAAMH,WAUtC,OAHqCR,YAAQN,EAARM,CACnCS,KCIWV,EFXQ,SAAC/B,GAKtB,OACE,yBAAKM,UAAWC,IAAEqC,SAChB,yBAAKtC,UAAWC,IAAEsC,cACf7C,EAAMiC,YAAYa,KAAI,SAACtC,GAAD,OACrB,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMD,GAAIH,EAAOG,GAAIoC,IAAKvC,EAAOG,SAG9D,yBAAKL,UAAWC,IAAEyC,UACfhD,EAAMmC,aAAaW,KAAI,SAAC3C,GAAD,OACtB,kBAAC,EAAD,CACEA,QAASA,EAAQA,QACjBC,WAAYD,EAAQC,WACpB2C,IAAK5C,EAAQQ,QAGjB,kBAACI,EAAD,CAAoBG,SAnBJ,SAAC+B,GACrBjD,EAAMsC,YAAYW,EAASb","file":"static/js/3.e4ad5de2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2p9Z5\",\"dialogsItems\":\"Dialogs_dialogsItems__2CNbo\",\"active\":\"Dialogs_active__2RBmN\"};","import React from \"react\";\r\n\r\nexport const Message = (props) => {\r\n  return (\r\n    <div style={{ border: \"1px solid red\" }}>\r\n      <p>{props.message}</p>\r\n      <span>Likes:{props.likesCount}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <Link to={`/dialogs/${props.id}`}>{props.name}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.scss\";\r\nimport { Message } from \"./Message\";\r\nimport DialogItem from \"./DialogItem\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators\";\r\nimport { Textarea } from \"../common/formControl/formControl\";\r\n\r\nconst maxLength160 = maxLengthCreator(160);\r\n\r\nexport const Dialogs = (props) => {\r\n  const addNewMessage = (formData) => {\r\n    props.sendMessage(formData.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {props.dialogsData.map((dialog) => (\r\n          <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />\r\n        ))}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {props.messagesData.map((message) => (\r\n          <Message\r\n            message={message.message}\r\n            likesCount={message.likesCount}\r\n            key={message.id}\r\n          />\r\n        ))}\r\n        <AddMesageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMesageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[required, maxLength160]}\r\n          component={Textarea}\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessageBody\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMesageFormRedux = reduxForm({ form: \"dialogsAddMesageForm\" })(\r\n  AddMesageForm\r\n);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToPropsRedirect = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { sendMessageCreator } from \"../../redux/dialogsReducer\";\r\nimport { Dialogs } from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.dialogsPage.dialogsData,\r\n    messagesData: state.dialogsPage.messagesData,\r\n    newMessageBody: state.dialogsPage.newMessageBody,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) =>\r\n      dispatch(sendMessageCreator(newMessageBody)),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}