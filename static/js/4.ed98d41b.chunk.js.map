{"version":3,"sources":["components/Profile/Profile.module.scss","components/Posts/Post.js","components/Posts/MyPosts.js","components/Posts/MyPostsContainer.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatus.js","components/Profile/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","message","maxLength10","maxLengthCreator","ReduxMyPostForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","name","cols","rows","MyPostsContainer","connect","state","posts","profilePage","newPostText","addPost","formData","newPost","map","post","key","id","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","useState","editMode","setEditmode","status","setStatus","useEffect","onChange","e","target","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","isLoading","Loader","className","s","profileImage","src","photos","small","avatar","alt","profileInfo","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","style","fontWeight","keys","contacts","contact","rel","href","Profile","ProfileContainer","userId","this","match","params","myId","history","getUserProfile","getStatus","Component","compose","auth","setProfileLoading","withRouter"],"mappings":"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","file":"static/js/4.ed98d41b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ubyh\",\"profileInfo\":\"Profile_profileInfo__3hBj-\",\"backgroundImage\":\"Profile_backgroundImage__22hIO\",\"profileImage\":\"Profile_profileImage__2dHf4\"};","import React from \"react\";\r\n\r\nexport const Post = (props) => {\r\n  return <li>{props.message}</li>;\r\n};\r\n","import React from \"react\";\r\nimport { Post } from \"./Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators\";\r\nimport { Textarea } from \"../common/formControl/formControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nexport const MyPosts = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.addPost(formData.newPost);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2> New post</h2>\r\n        <ReduxMyPostForm onSubmit={onSubmit} />\r\n      </div>\r\n      <h2>My posts</h2>\r\n      <ul>\r\n        {props.posts.map((post) => (\r\n          <Post key={post.id} message={post.message} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        validate={[required, maxLength10]}\r\n        component={Textarea}\r\n        name=\"newPost\"\r\n        cols=\"80\"\r\n        rows=\"2\"\r\n      />\r\n      <button>Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxMyPostForm = reduxForm({ form: \"profileAddNewPostForm\" })(\r\n  MyPostForm\r\n);\r\n","import { addPost } from \"../../redux/profileReducer\";\r\nimport { MyPosts } from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.profilePage.posts,\r\n  newPostText: state.profilePage.newPostText,\r\n});\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  const [editMode, setEditmode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  const activateEditMode = () => {\r\n    setEditmode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditmode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {editMode ? (\r\n          <div>\r\n            <input\r\n              onChange={onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={deactivateEditMode}\r\n              value={status}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <span onDoubleClick={activateEditMode}>{status}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport avatar from \"../../assets/man.svg\";\r\nimport s from \"./Profile.module.scss\";\r\nimport Loader from \"../common/Loader/Loader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isLoading }) => {\r\n  if (!profile && isLoading) {\r\n    return <Loader />;\r\n  } else if (!profile && !isLoading) {\r\n    return <div>Profile not found</div>;\r\n  }\r\n  return (\r\n    <>\r\n      {profile ? (\r\n        <>\r\n          <div className={s.profile}>\r\n            <img\r\n              className={s.profileImage}\r\n              src={profile.photos.small ? profile.photos.small : avatar}\r\n              alt=\"profile img\"\r\n            />\r\n            <div className={s.profileInfo}>\r\n              <h1>{profile.fullName}</h1>\r\n              <ProfileStatus status={status} updateStatus={updateStatus} />\r\n              <p>{profile.aboutMe}</p>\r\n\r\n              {profile.lookingForAJob ? (\r\n                <p>Open for job opportunities</p>\r\n              ) : null}\r\n              {<p>{profile.lookingForAJobDescription}</p>}\r\n\r\n              <p style={{ fontWeight: \"bold\" }}>Ways to contact:</p>\r\n              <ul>\r\n                {Object.keys(profile.contacts).map((contact, i) =>\r\n                  profile.contacts[contact] ? (\r\n                    <li key={i}>\r\n                      <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href={profile.contacts[contact]}\r\n                      >\r\n                        {contact}\r\n                      </a>\r\n                    </li>\r\n                  ) : null\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { MyPostsContainer } from \"../Posts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\n\r\nexport const Profile = (props) => {\r\n  return (\r\n    <>\r\n      <ProfileInfo {...props} />\r\n      <div className=\"content__posts\">\r\n        <MyPostsContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Profile } from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  setProfileLoading,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.myId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return <Profile {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  isLoading: state.profilePage.isLoading,\r\n  status: state.profilePage.status,\r\n  myId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    setProfileLoading,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}